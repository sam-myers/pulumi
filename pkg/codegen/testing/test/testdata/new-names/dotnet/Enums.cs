// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.NewNames
{
    [EnumType]
    public readonly struct EnumXYZ : IEquatable<EnumXYZ>
    {
        private readonly string _value;

        private EnumXYZ(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnumXYZ Plain { get; } = new EnumXYZ("A");
        public static EnumXYZ SnakeCase { get; } = new EnumXYZ("B");
        public static EnumXYZ SHA256 { get; } = new EnumXYZ("C");
        public static EnumXYZ SHA256Hash { get; } = new EnumXYZ("D");

        public static bool operator ==(EnumXYZ left, EnumXYZ right) => left.Equals(right);
        public static bool operator !=(EnumXYZ left, EnumXYZ right) => !left.Equals(right);

        public static explicit operator string(EnumXYZ value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnumXYZ other && Equals(other);
        public bool Equals(EnumXYZ other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
