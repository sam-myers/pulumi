// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package new_names

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"http_module"
	"internal"
)

type ExampleResource struct {
	pulumi.CustomResourceState

	URL      pulumi.StringPtrOutput   `pulumi:"URL"`
	GoodUrls pulumi.StringArrayOutput `pulumi:"good_URLs"`
	MapEnum  EnumXyzMapArrayOutput    `pulumi:"map_enum"`
}

// NewExampleResource registers a new resource with the given unique name, arguments, and options.
func NewExampleResource(ctx *pulumi.Context,
	name string, args *ExampleResourceArgs, opts ...pulumi.ResourceOption) (*ExampleResource, error) {
	if args == nil {
		args = &ExampleResourceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExampleResource
	err := ctx.RegisterResource("new_names:index:example_resource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExampleResource gets an existing ExampleResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExampleResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExampleResourceState, opts ...pulumi.ResourceOption) (*ExampleResource, error) {
	var resource ExampleResource
	err := ctx.ReadResource("new_names:index:example_resource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExampleResource resources.
type exampleResourceState struct {
}

type ExampleResourceState struct {
}

func (ExampleResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*exampleResourceState)(nil)).Elem()
}

type exampleResourceArgs struct {
	MapEnum     []map[string]EnumXyz `pulumi:"map_enum"`
	RequestHttp *http_module.Request `pulumi:"request_HTTP"`
}

// The set of arguments for constructing a ExampleResource resource.
type ExampleResourceArgs struct {
	MapEnum     EnumXyzMapArrayInput
	RequestHttp http_module.RequestPtrInput
}

func (ExampleResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exampleResourceArgs)(nil)).Elem()
}

type ExampleResourceInput interface {
	pulumi.Input

	ToExampleResourceOutput() ExampleResourceOutput
	ToExampleResourceOutputWithContext(ctx context.Context) ExampleResourceOutput
}

func (*ExampleResource) ElementType() reflect.Type {
	return reflect.TypeOf((**ExampleResource)(nil)).Elem()
}

func (i *ExampleResource) ToExampleResourceOutput() ExampleResourceOutput {
	return i.ToExampleResourceOutputWithContext(context.Background())
}

func (i *ExampleResource) ToExampleResourceOutputWithContext(ctx context.Context) ExampleResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExampleResourceOutput)
}

type ExampleResourceOutput struct{ *pulumi.OutputState }

func (ExampleResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExampleResource)(nil)).Elem()
}

func (o ExampleResourceOutput) ToExampleResourceOutput() ExampleResourceOutput {
	return o
}

func (o ExampleResourceOutput) ToExampleResourceOutputWithContext(ctx context.Context) ExampleResourceOutput {
	return o
}

func (o ExampleResourceOutput) URL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExampleResource) pulumi.StringPtrOutput { return v.URL }).(pulumi.StringPtrOutput)
}

func (o ExampleResourceOutput) GoodUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExampleResource) pulumi.StringArrayOutput { return v.GoodUrls }).(pulumi.StringArrayOutput)
}

func (o ExampleResourceOutput) MapEnum() EnumXyzMapArrayOutput {
	return o.ApplyT(func(v *ExampleResource) EnumXyzMapArrayOutput { return v.MapEnum }).(EnumXyzMapArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExampleResourceInput)(nil)).Elem(), &ExampleResource{})
	pulumi.RegisterOutputType(ExampleResourceOutput{})
}
