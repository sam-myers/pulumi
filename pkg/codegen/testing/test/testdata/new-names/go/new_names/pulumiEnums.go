// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package new_names

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type EnumXyz string

const (
	EnumXyzPlain        = EnumXyz("A")
	EnumXyz_Snake_case  = EnumXyz("B")
	EnumXyzSHA256       = EnumXyz("C")
	EnumXyz_SHA256_hash = EnumXyz("D")
)

func (EnumXyz) ElementType() reflect.Type {
	return reflect.TypeOf((*EnumXyz)(nil)).Elem()
}

func (e EnumXyz) ToEnumXyzOutput() EnumXyzOutput {
	return pulumi.ToOutput(e).(EnumXyzOutput)
}

func (e EnumXyz) ToEnumXyzOutputWithContext(ctx context.Context) EnumXyzOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnumXyzOutput)
}

func (e EnumXyz) ToEnumXyzPtrOutput() EnumXyzPtrOutput {
	return e.ToEnumXyzPtrOutputWithContext(context.Background())
}

func (e EnumXyz) ToEnumXyzPtrOutputWithContext(ctx context.Context) EnumXyzPtrOutput {
	return EnumXyz(e).ToEnumXyzOutputWithContext(ctx).ToEnumXyzPtrOutputWithContext(ctx)
}

func (e EnumXyz) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnumXyz) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnumXyz) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnumXyz) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnumXyzOutput struct{ *pulumi.OutputState }

func (EnumXyzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnumXyz)(nil)).Elem()
}

func (o EnumXyzOutput) ToEnumXyzOutput() EnumXyzOutput {
	return o
}

func (o EnumXyzOutput) ToEnumXyzOutputWithContext(ctx context.Context) EnumXyzOutput {
	return o
}

func (o EnumXyzOutput) ToEnumXyzPtrOutput() EnumXyzPtrOutput {
	return o.ToEnumXyzPtrOutputWithContext(context.Background())
}

func (o EnumXyzOutput) ToEnumXyzPtrOutputWithContext(ctx context.Context) EnumXyzPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnumXyz) *EnumXyz {
		return &v
	}).(EnumXyzPtrOutput)
}

func (o EnumXyzOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnumXyzOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnumXyz) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnumXyzOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnumXyzOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnumXyz) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnumXyzPtrOutput struct{ *pulumi.OutputState }

func (EnumXyzPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnumXyz)(nil)).Elem()
}

func (o EnumXyzPtrOutput) ToEnumXyzPtrOutput() EnumXyzPtrOutput {
	return o
}

func (o EnumXyzPtrOutput) ToEnumXyzPtrOutputWithContext(ctx context.Context) EnumXyzPtrOutput {
	return o
}

func (o EnumXyzPtrOutput) Elem() EnumXyzOutput {
	return o.ApplyT(func(v *EnumXyz) EnumXyz {
		if v != nil {
			return *v
		}
		var ret EnumXyz
		return ret
	}).(EnumXyzOutput)
}

func (o EnumXyzPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnumXyzPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnumXyz) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnumXyzInput is an input type that accepts values of the EnumXyz enum
// A concrete instance of `EnumXyzInput` can be one of the following:
//
//	EnumXyzPlain
//	EnumXyz_Snake_case
//	EnumXyzSHA256
//	EnumXyz_SHA256_hash
type EnumXyzInput interface {
	pulumi.Input

	ToEnumXyzOutput() EnumXyzOutput
	ToEnumXyzOutputWithContext(context.Context) EnumXyzOutput
}

var enumXyzPtrType = reflect.TypeOf((**EnumXyz)(nil)).Elem()

type EnumXyzPtrInput interface {
	pulumi.Input

	ToEnumXyzPtrOutput() EnumXyzPtrOutput
	ToEnumXyzPtrOutputWithContext(context.Context) EnumXyzPtrOutput
}

type enumXyzPtr string

func EnumXyzPtr(v string) EnumXyzPtrInput {
	return (*enumXyzPtr)(&v)
}

func (*enumXyzPtr) ElementType() reflect.Type {
	return enumXyzPtrType
}

func (in *enumXyzPtr) ToEnumXyzPtrOutput() EnumXyzPtrOutput {
	return pulumi.ToOutput(in).(EnumXyzPtrOutput)
}

func (in *enumXyzPtr) ToEnumXyzPtrOutputWithContext(ctx context.Context) EnumXyzPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnumXyzPtrOutput)
}

func (in *enumXyzPtr) ToOutput(ctx context.Context) pulumix.Output[*EnumXyz] {
	return pulumix.Output[*EnumXyz]{
		OutputState: in.ToEnumXyzPtrOutputWithContext(ctx).OutputState,
	}
}

// EnumXyzMapInput is an input type that accepts EnumXyzMap and EnumXyzMapOutput values.
// You can construct a concrete instance of `EnumXyzMapInput` via:
//
//	EnumXyzMap{ "key": EnumXyzArgs{...} }
type EnumXyzMapInput interface {
	pulumi.Input

	ToEnumXyzMapOutput() EnumXyzMapOutput
	ToEnumXyzMapOutputWithContext(context.Context) EnumXyzMapOutput
}

type EnumXyzMap map[string]EnumXyz

func (EnumXyzMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EnumXyz)(nil)).Elem()
}

func (i EnumXyzMap) ToEnumXyzMapOutput() EnumXyzMapOutput {
	return i.ToEnumXyzMapOutputWithContext(context.Background())
}

func (i EnumXyzMap) ToEnumXyzMapOutputWithContext(ctx context.Context) EnumXyzMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnumXyzMapOutput)
}

type EnumXyzMapOutput struct{ *pulumi.OutputState }

func (EnumXyzMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EnumXyz)(nil)).Elem()
}

func (o EnumXyzMapOutput) ToEnumXyzMapOutput() EnumXyzMapOutput {
	return o
}

func (o EnumXyzMapOutput) ToEnumXyzMapOutputWithContext(ctx context.Context) EnumXyzMapOutput {
	return o
}

func (o EnumXyzMapOutput) MapIndex(k pulumi.StringInput) EnumXyzOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EnumXyz {
		return vs[0].(map[string]EnumXyz)[vs[1].(string)]
	}).(EnumXyzOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnumXyzInput)(nil)).Elem(), EnumXyz("A"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnumXyzPtrInput)(nil)).Elem(), EnumXyz("A"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnumXyzMapInput)(nil)).Elem(), EnumXyzMap{})
	pulumi.RegisterOutputType(EnumXyzOutput{})
	pulumi.RegisterOutputType(EnumXyzPtrOutput{})
	pulumi.RegisterOutputType(EnumXyzMapOutput{})
}
