// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewNames
{
    [NewNamesResourceType("new_names:index:example_resource")]
    public partial class ExampleResource : global::Pulumi.CustomResource
    {
        [Output("URL")]
        public Output<string?> URL { get; private set; } = null!;

        [Output("good_URLs")]
        public Output<ImmutableArray<string>> GoodURLs { get; private set; } = null!;

        [Output("map_enum")]
        public Output<ImmutableArray<ImmutableDictionary<string, Pulumi.NewNames.EnumXYZ>>> MapEnum { get; private set; } = null!;


        /// <summary>
        /// Create a ExampleResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExampleResource(string name, ExampleResourceArgs? args = null, CustomResourceOptions? options = null)
            : base("new_names:index:example_resource", name, args ?? new ExampleResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExampleResource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("new_names:index:example_resource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExampleResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExampleResource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ExampleResource(name, id, options);
        }
    }

    public sealed class ExampleResourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("map_enum")]
        private InputList<ImmutableDictionary<string, Pulumi.NewNames.EnumXYZ>>? _map_enum;
        public InputList<ImmutableDictionary<string, Pulumi.NewNames.EnumXYZ>> MapEnum
        {
            get => _map_enum ?? (_map_enum = new InputList<ImmutableDictionary<string, Pulumi.NewNames.EnumXYZ>>());
            set => _map_enum = value;
        }

        [Input("request_HTTP")]
        public Input<Pulumi.NewNames.HTTPModule.Inputs.RequestArgs>? RequestHTTP { get; set; }

        public ExampleResourceArgs()
        {
        }
        public static new ExampleResourceArgs Empty => new ExampleResourceArgs();
    }
}
